1.TEMP의 사번 앞 4자리가 입사년도 일때

입사년도별 직급별로 
범위를 분리하여 각 범위에서

최고연봉을 받는 사번 과 그 직원,
최소연봉을 받는 사번 과 그 직원,

해당 범위의 직원 수,

해당 범위 내에서 자신의 급여랭킹,

해당 범위 직원의 급여합,

자기보다 급여가 많은 직원 중 급여가 가장 적은 직원의 연봉,
자기보다 급여가 적은 직원 중 급여가 가장 많은 직원의 연봉
을 구하시오



SELECT SUBSTR(EMP_ID,1,4) EMPID,
       LEV,
       SALARY,
       EMP_ID,
       
       MAX(SALARY) OVER (PARTITION BY SUBSTR(EMP_ID,1,4), LEV ORDER BY SALARY) MAXSAL,
       MIN(SALARY) OVER (PARTITION BY SUBSTR(EMP_ID,1,4), LEV ORDER BY SALARY) MINSAL,
       COUNT(SUBSTR(EMP_ID,1,4)) OVER (PARTITION BY SUBSTR(EMP_ID,1,4),LEV ORDER BY SALARY)     COUNT,       
       RANK() OVER (PARTITION BY SUBSTR(EMP_ID,1,4),LEV ORDER BY SALARY) RANKME,       
       SUM(SALARY) OVER (PARTITION BY SUBSTR(EMP_ID,1,4),LEV ORDER BY SALARY) SUM,
       
       LAG(SALARY,1) OVER (PARTITION BY SUBSTR(EMP_ID,1,4),LEV ORDER BY SALARY) MORETHANME,
       LEAD(SALARY,1) OVER (PARTITION BY SUBSTR(EMP_ID,1,4),LEV ORDER BY SALARY) LOWTHANME
       
       
   
FROM TEMP
GROUP BY SUBSTR(EMP_ID,1,4),LEV,SALARY,EMP_ID
ORDER BY 1,2;


2. 직원을 사번별로 SORT하여 사번, 성명, 부서 를 보여주되,
한 LINE에 4명 씩 DISPLAY 해주는 QUERY 작성


SELECT EMP_ID, EMP_NAME, DEPT_CODE,
       ROW_NUMBER() OVER (ORDER BY EMP_ID) NO
  FROM TEMP;

  SELECT EMP_ID, EMP_NAME, DEPT_CODE, NO, MOD(NO,4) 나머지, CEIL(NO/4) RNO
  FROM (SELECT EMP_ID, EMP_NAME, DEPT_CODE,
             ROW_NUMBER() OVER (ORDER BY EMP_ID) NO
      FROM TEMP);

  SELECT RNO,
       DECODE(나머지,1,EMP_ID) EMP_ID_1, DECODE(나머지,1,EMP_NAME) EMP_NAME_1, DECODE(나머지,1,DEPT_CODE) DEPT_CODE_1, DECODE(나머지,1,NO) NO_1,
       DECODE(나머지,2,EMP_ID) EMP_ID_2, DECODE(나머지,2,EMP_NAME) EMP_NAME_2, DECODE(나머지,2,DEPT_CODE) DEPT_CODE_2, DECODE(나머지,2,NO) NO_2,
       DECODE(나머지,3,EMP_ID) EMP_ID_3, DECODE(나머지,3,EMP_NAME) EMP_NAME_3, DECODE(나머지,3,DEPT_CODE) DEPT_CODE_3, DECODE(나머지,3,NO) NO_3,
       DECODE(나머지,0,EMP_ID) EMP_ID_4, DECODE(나머지,0,EMP_NAME) EMP_NAME_4, DECODE(나머지,0,DEPT_CODE) DEPT_CODE_4, DECODE(나머지,0,NO) NO_4
  FROM (SELECT EMP_ID, EMP_NAME, DEPT_CODE, NO, MOD(NO,4) 나머지, CEIL(NO/4) RNO
      FROM (SELECT EMP_ID, EMP_NAME, DEPT_CODE,
                   ROW_NUMBER() OVER (ORDER BY EMP_ID) NO
            FROM TEMP)
        );
        
  SELECT RNO,
       MAX(EMP_ID_1), MAX(EMP_NAME_1), MAX(DEPT_CODE_1), --MAX(NO_1),
       MAX(EMP_ID_2), MAX(EMP_NAME_2), MAX(DEPT_CODE_2), --MAX(NO_2),
       MAX(EMP_ID_3), MAX(EMP_NAME_3), MAX(DEPT_CODE_3), --MAX(NO_3),
       MAX(EMP_ID_4), MAX(EMP_NAME_4), MAX(DEPT_CODE_4)--, MAX(NO_4)
  FROM (SELECT RNO,
             DECODE(나머지,1,EMP_ID) EMP_ID_1, DECODE(나머지,1,EMP_NAME) EMP_NAME_1, DECODE(나머지,1,DEPT_CODE) DEPT_CODE_1, DECODE(나머지,1,NO) NO_1,
             DECODE(나머지,2,EMP_ID) EMP_ID_2, DECODE(나머지,2,EMP_NAME) EMP_NAME_2, DECODE(나머지,2,DEPT_CODE) DEPT_CODE_2, DECODE(나머지,2,NO) NO_2,
             DECODE(나머지,3,EMP_ID) EMP_ID_3, DECODE(나머지,3,EMP_NAME) EMP_NAME_3, DECODE(나머지,3,DEPT_CODE) DEPT_CODE_3, DECODE(나머지,3,NO) NO_3,
             DECODE(나머지,0,EMP_ID) EMP_ID_4, DECODE(나머지,0,EMP_NAME) EMP_NAME_4, DECODE(나머지,0,DEPT_CODE) DEPT_CODE_4, DECODE(나머지,0,NO) NO_4
      FROM (SELECT EMP_ID, EMP_NAME, DEPT_CODE, NO, MOD(NO,4) 나머지, CEIL(NO/4) RNO
            FROM (SELECT EMP_ID, EMP_NAME, DEPT_CODE,
                         ROW_NUMBER() OVER (ORDER BY EMP_ID) NO
                  FROM TEMP)
              )
        )
  GROUP BY RNO
  ORDER BY 1;