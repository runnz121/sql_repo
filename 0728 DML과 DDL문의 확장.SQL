DML과 DDL문의 확장

INSERT [ALL] [조건적이니 INSERT 절]
[INSERT INTO 절 VALUES 절] (서브쿼리)

종류
    UNCONDITIONAL INSERT
    CONDITIONAL ALL INSERT
    CONDITIONAL FIRST INSERT --첫번째 조건만족하면 나머지 무시
    PIVOTING INSERT --열을 행으로 변환시켜 대입(데이터 열을 > 컬럼 행으로)


----

UNCONDITIONAL INSERT

     INSERT ALL 
            INTO SAL_HISTORY VALUES (EMP_ID,IREDATE,SAL)
            INTO MGR_HISTORY VALUES(EMP_ID,MGR,SAL)
            SELECT EMPLOYEE_ID EMPID, HIRE_DATE HIREDATE, SALARY SAL, MANAGER_ID MGR
            FROM EMPLOYEES
            WHERE EMPLOYEE_ID > 200;





CONDITIONAL ALL INSERT

    INSERT ALL
        WHEN SAL > 10000 THEN
            INTO SAL_HISTORY VALUES(EMPID,HIREDATE,SAL)

        WHEN MGR > 200 THEN
            
            INTO MGR_HISTORY VALUES (EMPID, HIREDATE, SAL)
            SELECT EMPLOYEE_ID EMPID, HIRE_DATE HIREDATE, SALARY SAL, MANAGER_ID MGR
            FROM EMPLOYEES
            WHERE EMPLOYEE_ID > 200;




CONDITIONAL FIRST INSERT --첫번째 조건만족하면 나머지 무시

    INSERT FIRST   
        WHEN SAL > 25000 THEN
            INTO SPECIAL_SAL VALUES(DEPTID,SAL)

        WHEN HIREDATE LIKE ('%00%') THEN
            INTO HIREDATE_HISTORY_00 VALUES (DEPTID, HIREDATE)
            
        WHEN HIREDATE LIKE ('%99%') THEN
            INTO HIREDATE_HISTORY_99 VALUES (DEPTID, HIREDATE)

        ELSE
            INTO HIREDATE_HISTORY VALUES (DEPTID, HIREDATE)
            SELECT DEPARTMENT_ID DEPTID, SUM(SALARY) SAL, MAX(HIRE_DATE) HIREDATE
            FROM EMPLOYEES GROUP BY DEPARTMENT_ID;


 PIVOTING INSERT --열을 행으로 변환시켜 대입(데이터 열을 > 컬럼 행으로)(UNCONDITIONAL INSERT ALL 가 같다)



 INSERT ALL 
    INTO SALES_INFO VALUES (EMPOYEE_ID, WEEK_ID, SALES_MON)
    INTO SALES_INFO VALUES (EMPOYEE_ID, WEEK_ID, SALES_TUE)
    INTO SALES_INFO VALUES (EMPOYEE_ID, WEEK_ID, SALES_WED)
    INTO SALES_INFO VALUES (EMPOYEE_ID, WEEK_ID, SALES_THU)
    INTO SALES_INFO VALUES (EMPOYEE_ID, WEEK_ID, SALES_FRI)
    SELECT EMPLOYEE_ID, WEEK_ID, SALES_MON, SALES_THU, SALES_WED, SALES_THU, SALES_FRI
    FROM SALES_SOURCE_DATA;



외부 테이블

CREATE DIRECTORY EMP_DIR AS '/FLAT_FILES';

CREATE TABLE OLDEMP (
        EMPNO NUMBER, EMPNAME CHAR(20), BIRTHDATE DATE)
        ORGANIZATION EXTERNAL
        (TYPE ORACLE_LOADER
        DEFAULT DIRECTORY EMP_DIRACCESS PARAMETERS
        (RECORDS DELMINITED BY NEWLINE
        BADFILE 'BAD_EMP'
        LOGFILE 'LOG_EMP'
        FIELDS TERMINATED BY ','
        (EMPNO CHAR, EMPNAME CHAR, BIRTHDATE CHAR DATE_FORMAT DATE MASK "DD-MON-YYYY"))
        LOCATION ('EMP1.TXT'))
        PARALLEL 5
        REJECT LIMIT 200;


CREATE TABLE NEW_EMP
(EMPOYEE_ID NUMBER(6)
                PRIMARY KEY USING INDEX
                (CREATE INDEX EMP_ID_IDX ON NEW_EMP (EMPOYEE_ID),
                FIRST_NAME VARCHAR2(20),
                LAST_NAME VARCHAR2(25));               ))